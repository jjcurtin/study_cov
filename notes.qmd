Simulate across

- beta_x (0, small, medium, large.)
- different n_obs
- n_covs
- beta_covs (vary number of 0 and size of non-zero) 
- sigma_covs (uncorrelated, small, medium - among all or some or only ones related to y?)


1. function to generate data for x, covs, and y

use mvrnorm() from MASS for covs
dichotomous x, equal n
mean_covs = 0
sd_covs = 1
y as function of x, covs, betas, and e

parameters for 

- n_obs
- n_covs
- sigma_covs
- beta_x
- beta_covs 

 
2. Functions for each analysis method

- no_covariates
- all_covariates
- lasso 
- partial_r
- p_hack

functions return

- b_x
- se_x
- p_x


# write a function that generates multivariate normal data for 3 variable
```{r}
library(MASS)
n_obs = 100
n_covs = 3
mean_covs = 0
sd_covs = 1
sigma_covs = diag(n_covs)
set.seed(01271969)
covs = mvrnorm(n_obs, mu = rep(mean_covs, n_covs), Sigma = sigma_covs)
covs

```
# put all of the above code in a function that has parameters for n_obs, n_covs, mean_covs, sd_covs, sigma_covs`
```{r}
generate_covs <- function(n_obs, n_covs, mean_covs, sd_covs, sigma_covs){
  covs = mvrnorm(n_obs, mu = rep(mean_covs, n_covs), Sigma = sigma_covs)
  return(covs)
}


Issues

- need to consider how to handle effect sizes of x and covs across settings

Maybe always have the same covs generate Y but only some are available?  But if we vary magnitude of their effects, that will still affect sd of Y

Maybe generate Y first based on covs but then set its SD back to 1?  That would allow for the same x effect - RE cohen's d.
